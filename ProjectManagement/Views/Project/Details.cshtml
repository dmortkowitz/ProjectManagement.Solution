@using ProjectManagement.Models;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Html;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Project Detail Page";
}

@{
  var user = await @UserManager.GetUserAsync(User);
  var UserName = @user.UserName;

  if (!ProjectManagement.Models.User.Exist(@user.UserName))
  {
      ProjectManagement.Models.User newUser = new ProjectManagement.Models.User(@user.FirstName + " " + @user.LastName, @user.UserName, @user.Email);
      newUser.Save();
  }
  ProjectManagement.Models.User thisUser = ProjectManagement.Models.User.Find(UserName);
}
@{
  HtmlString content = new HtmlString(@Model.Content);
}
<h1 id="page-header">@Model.Name</h1>
<br />
<div class="project-container panel">
  <div class="panel-heading project-header">
    <div class="panel-title">
      <h3 class="project-header">@Model.Name</h3>
    </div>
  </div>
  <div class="project-details panel-body">
    <div class="row">
      <div class="col-md-12">
        <h4><i class="fa fa-info-circle" aria-hidden="true"></i>&nbsp; About This Project</h4>
        <p>@content</p>
      </div>
    </div>
    <div class="row">
      <div class="col-md-6">
        <h4>
          <i class="fa fa-calendar" aria-hidden="true"></i>&nbsp;
          <strong>Due</strong>: @Model.DueDate.Date.ToString("d")
        </h4>
        <h4>
          <i class="fa fa-check-square-o" aria-hidden="true"></i>&nbsp;
          <strong>Status</strong>: @Model.Status
        </h4>
        <!-- before using this line, import mysql db file -->
        <!-- <p><strong>Owner</strong>: @Model.GetOwner().Name</p> -->
        <br />
        <h4>
          <i class="fa fa-users" aria-hidden="true"></i>&nbsp;
          <strong>Contributors</strong>:
        </h4>
        <ul>
          @foreach (var person in @Model.GetUsers())
          {
            <li>@person.Name</li>
          }
        </ul>
        <br />
        <h4>
          <i class="fa fa-tags" aria-hidden="true"></i>&nbsp;
          <strong>Tags</strong>:
        </h4>
        @foreach(Tag tag in @Model.GetTags())
        {
          <p>@tag.Name</p>
        }
        <br />
      </div>
      <div class="col-md-6">
        <h4>
          <i class="fa fa-columns" aria-hidden="true"></i>&nbsp;
          <strong>Todo Items</strong>:
        </h4>
        <ul>
          @foreach(var todo in @Model.GetTodos())
          {
            <li>@todo.Name - @todo.Status</li>
          }
        </ul>
        <br />
      </div>
    </div>
    @if (@Model.GetUsers().Count > 1)
    {
      <form asp-controller="Project" asp-action="LeaveProject" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
        <input type="hidden" name="projectId" value="@Model.Id">
        <input type="hidden" name="userId" value="@thisUser.Id">
        <a href="/projects/update/@Model.Id" class="btn" id="edit">Edit</a>
        <button type="submit" class="btn btn-danger" id="delete">Leave</button>
      </form>
    }
    else
    {
      <form asp-controller="Project" asp-action="DeleteProject" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
        <input type="hidden" name="projectId" value="@Model.Id">
        <a href="/projects/update/@Model.Id" id="edit" class="btn btn-default">Edit</a>
        <button type="submit" class="btn btn-danger" id="delete">Delete</button>
      </form>
    }
    <br />
  </div>
</div>
