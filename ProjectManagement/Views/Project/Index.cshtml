@using ProjectManagement.Models;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Html;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "My Projects Page";
}

@{
  var user = await @UserManager.GetUserAsync(User);
  var UserName = @user.UserName;

  if (!ProjectManagement.Models.User.Exist(@user.UserName))
  {
      ProjectManagement.Models.User newUser = new ProjectManagement.Models.User(@user.FirstName + " " + @user.LastName, @user.UserName, @user.Email);
      newUser.Save();
  }
  ProjectManagement.Models.User thisUser = ProjectManagement.Models.User.Find(UserName);
}

<h1 id="page-header">My Projects</h1>
@foreach(Project project in thisUser.GetProjects())
{
  HtmlString content = new HtmlString(@project.Content);
  <div class="project-container">
    <h2 class="project-header">@project.Name</h2>
    <div class="project-details">
      <p><strong>About This Project</strong>: @content</p>
      <p><strong>Due</strong>: @project.DueDate</p>
      <p><strong>Status</strong>: @project.Status</p>
    </div>
    <div class="status-container">
      <div class="row">

        @* Todo Column *@
        <div class="col-sm-3">
          <div class="column column--color-blue">
            <h3 id="todo" class="task-category">Todo</h3>
            <form id="todo-update" action="/projects/updateStatus" method="post">
              <div id="todo-col" ondrop="drop(event, this)" ondragover="allowDrop(event)">
                @foreach(Todo task in Todo.GetAll())
                {
                  @if(task.Status == "Todo")
                  {
                    <p class="task-card" id="@task.Id" draggable="true" ondragstart="drag(event)">@task.Name</p>
                  }
                }
                <input type="hidden" name="newStatus" value="Todo" />
                <input id="todo-col-input" type="hidden" name="todoId">
              </div>
            </form>
            <p>
              <form id="new-todo" action="/projects/newTodo" method="post">
                <input name="projectId" type="hidden" value="@project.Id" />
                <div class="input-group">
                  <input class="form-control" name="todoName" type="text" placeholder="Add New Todo" />
                  <span class="input-group-btn">
                    <button class="btn btn-success" type="submit">+</button>
                  </span>
                </div>
              </form>
            </p>
          </div>
        </div>

        @* In Progress Column *@
        <div class="col-sm-3">
          <form id="in-progress-update" action="/projects/updateStatus" method="post">
            <div class="column column--color-yellow"  id="in-progress-col" ondrop="drop(event, this)" ondragover="allowDrop(event)">
              <h3 id="in-progress" class="task-category">In Progress</h3>
              @foreach(Todo task in Todo.GetAll())
              {
                @if(task.Status == "In Progress")
                {
                  <p class="task-card" id="@task.Id" draggable="true" ondragstart="drag(event)">@task.Name</p>
                }
              }
              <input type="hidden" name="newStatus" value="In Progress" />
              <input id="in-progress-col-input" type="hidden" name="todoId">
            </div>
          </form>
        </div>

        @* Stuck Column *@
        <div class="col-sm-3">
          <form id="stuck-update" action="/projects/updateStatus" method="post">
            <div class="column column--color-red" id="stuck-col" ondrop="drop(event, this)" ondragover="allowDrop(event)">
              <h3 id="stuck" class="task-category">Stuck</h3>
              @foreach(Todo task in Todo.GetAll())
              {
                @if(task.Status == "Stuck")
                {
                  <p class="task-card" id="@task.Id" draggable="true" ondragstart="drag(event)">@task.Name</p>
                }
              }
              <input type="hidden" name="newStatus" value="Stuck" />
              <input id="stuck-col-input" type="hidden" name="todoId">
            </div>
          </form>
        </div>

        @* Done Column *@
        <div class="col-sm-3">
          <form id="done-update" action="/projects/updateStatus" method="post">
            <div class="column column--color-green" id="done-col" ondrop="drop(event, this)" ondragover="allowDrop(event)">
              <h3 class="task-category">Done</h3>
              @foreach(Todo task in Todo.GetAll())
              {
                @if(task.Status == "Done")
                {
                  <p class="task-card" id="@task.Id" draggable="true" ondragstart="drag(event)">@task.Name</p>
                }
              }
              <input type="hidden" name="newStatus" value="Done" />
              <input id="done-col-input" type="hidden" name="todoId">
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
}
